// Copyright 2018 Google LLC.
// Libgsound version: 5a34367
#ifndef GSOUND_TARGET_INFO_H
#define GSOUND_TARGET_INFO_H

#ifdef __cplusplus
extern "C" {
#endif

/**
 * This header file was generated by Google GSound Services,
 * it should not be altered in any way. Please treat this as
 * a read-only file.
 *
 * Each function listed below must
 * be implemented for each specific
 * platform / SDK
 *
 */
#include "gsound.h"

/**
 * Retrieve the serial number of this device.
 *
 * The Serial Number must be an ASCII encoded null-terminated string.
 * The total number of bytes in the string plus the null character
 * cannot exceed max_len.
 *
 * Note: In case of a TWS system - the serial number is assumed to be
 * the same on both the master and the slave device.
 *
 *
 * param[out]: serial_num Pointer to a buffer of max_len which the
 *                        implementation of this function must populate with
 *                        the serial number of the specific device.
 * param[in]:  max_len    Max number of bytes which can be written to serial_num
 */
GSoundStatus GSoundTargetInfoGetSerial(uint8_t *serial_num, uint32_t max_len);

/**
 * Retrieve the Application version of this binary.
 *
 * This is the version number which is displayed to the end user and also
 * used to determine if an OTA upgrade is required. For example, the Google
 * Assistant application will only perform an OTA if the latest firmware version
 * available on the OTA server is newer (larger) than the version number
 * returned by this function.
 *
 * Google strongly suggests the following version number format:
 *
 *      "Major.Minor.Revision"
 *
 * Where Major, Minor, and Revision are all base 10, ASCII encoded numbers
 * with Major as the most significant value and Revision as the least
 * significant value.
 *
 * This version number must be an ASCII encoded null-terminated string.
 * The total number of bytes in the string plus the null character
 * cannot exceed max_len.
 *
 * Note: In case of a TWS system - the Application version is assumed to be
 * the same on both the master and the slave device.
 *
 * param[out]: version    Pointer to a buffer of max_len which the
 *                        implementation of this function must populate with
 *                        the version number of the specific device.
 * param[in]:  max_len    Max number of bytes which can be written to version
 */
GSoundStatus GSoundTargetInfoGetAppVersion(char *version, uint32_t max_len);

/**
 * Returns the Device ID assigned to this device by Google.
 * This value should generally match the magic pair ID if possible.
 *
 * Note: In case of a TWS system - the device ID is assumed to be
 * the same on both the master and the slave device.
 *
 * param[out]: device_id  Pointer to device ID which the implementation of this
 *                        Function must populate.
 */
GSoundStatus GSoundTargetInfoGetDeviceId(uint32_t *device_id);

#ifdef __cplusplus
}
#endif

#endif  // GSOUND_TARGET_INFO_H
