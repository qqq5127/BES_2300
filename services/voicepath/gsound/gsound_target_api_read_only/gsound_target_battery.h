// Copyright 2018 Google LLC.
// Libgsound version: 5a34367
#ifndef GSOUND_TARGET_BATTERY_H
#define GSOUND_TARGET_BATTERY_H

#ifdef __cplusplus
extern "C" {
#endif

/**
 * This header file was generated by Google GSound Services,
 * it should not be altered in any way. Please treat this as
 * a read-only file.
 *
 * Each function listed below must
 * be implemented for each specific
 * platform / SDK
 *
 */
#include "gsound.h"

/**
 * Data structure defining
 * the information required when
 * providing Battery status
 */
typedef struct {
  int percent_full;
  bool charging;
} GSoundBatteryInfo;

typedef struct {
  /**
   * Callback which should be executed by Target when battery status
   * information is ready.
   *
   * Note: Target is responsible for periodically polling for the battery status
   * at a reasonable rate if an on-change event mechanism does not exist.
   *
   * GSound will consume this data synchronously. Caller can free
   * any memory used to pass in the status when the function returns
   *
   * This function is non-blocking and thread safe. It can be called from any
   * thread/context including an ISR.
   *
   * For multi-part devices (i.e. TWS), the Target must report the lowest
   * battery level amongst all devices.
   *
   * param[in]: battery_info Pointer to current battery information
   */
  GSoundStatus (*gsound_battery_ready)(const GSoundBatteryInfo *battery_info);

} GSoundBatteryInterface;

/**
 * Initialize battery readings and provide the
 * callback function.
 */
GSoundStatus GSoundTargetBatteryInit(GSoundBatteryInterface *interface);

#ifdef __cplusplus
}
#endif

#endif  // GSOUND_TARGET_BATTERY_H
